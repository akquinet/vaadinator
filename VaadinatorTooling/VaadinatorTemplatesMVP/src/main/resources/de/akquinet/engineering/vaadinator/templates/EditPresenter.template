#*
Copyright 2014 akquinet engineering GmbH
 
Licensed under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations under
the License.
*#
package ${package};

import java.util.List;

import ${common.basePackage}.ui.presenter.Presenter;
import ${common.basePackage}.ui.presenter.listener.AfterCancelListener;
import ${common.basePackage}.ui.presenter.listener.AfterSaveListener;
import ${common.basePackage}.ui.presenter.listener.BeforeCancelListener;
import ${common.basePackage}.ui.presenter.listener.BeforeSaveListener;
import ${viewPackage}.${bean.className}EditView;

#foreach($import in $bean.imports)
${import}
#end
import ${modelPackage}.${bean.className};

public interface ${bean.className}EditPresenter extends Presenter {

	public ${bean.className}EditView getView();

	public ${bean.className} get${bean.className}();
	
	public void set${bean.className}(${bean.className} ${bean.classNamePass});

	public void addBeforeSaveListener(BeforeSaveListener<Object> listener);
	
	public void addAfterSaveListener(AfterSaveListener<Object> listener);
	
	public void addBeforeCancelListener(BeforeCancelListener<Object> listener);

	public void addAfterCancelListener(AfterCancelListener<Object> listener);
	
	public void addBeforeSaveListener(${bean.className}EditPresenter.Before${bean.className}SaveListener listener);
	
	public void addAfterSaveListener(${bean.className}EditPresenter.After${bean.className}SaveListener listener);
	
	public void addBeforeCancelListener(${bean.className}EditPresenter.Before${bean.className}CancelListener listener);
	
	public void addAfterCancelListener(${bean.className}EditPresenter.After${bean.className}CancelListener listener);
	
    public static interface Before${bean.className}SaveListener extends BeforeSaveListener<${bean.className}> {
	}

	public static interface After${bean.className}SaveListener extends AfterSaveListener<${bean.className}> {
	}

	public static interface Before${bean.className}CancelListener extends BeforeCancelListener<${bean.className}> {
	}

	public static interface After${bean.className}CancelListener extends AfterCancelListener<${bean.className}> {
	}
}
