#*
Copyright 2016 Daniel Nordhoff-Vergien
 
Licensed under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations under
the License.
*#
package ${common.basePackage}.ui.view;

import com.vaadin.ui.Button;
/**
 * A factory to create the buttons in the Vaadinator application.
 * <p>
 * Vaadinator creates one implementation for all profiles which is injected by
 * the VaadinViewFactory into the view implementations.
 * <p>
 * There are two methods per button type: a createXXXButton method which returns
 * the button instance and an initXXXButton method which initializes the button.
 *
 */
public interface ButtonFactory {

	Button createCancelButton();

	Button createNewButton();

	Button createNoSelectionButton();

	Button createRemoveButton();

	Button createSaveButton();

	void initCancelButton(Button cancelButton, String caption, String style, Button.ClickListener clickListener);

	void initNewButton(Button newButton, String caption, String style, Button.ClickListener clickListener);

	void initNoSelectionButton(Button noSelectionButton, String caption, String style,
			Button.ClickListener clickListener);

	void initRemoveButton(Button removeButton, String caption, String style, Button.ClickListener clickListener);

	void initSaveButton(Button saveButton, String caption, String style, Button.ClickListener clickListener);
}
