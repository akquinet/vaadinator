#*
Copyright 2014 akquinet engineering GmbH
 
Licensed under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations under
the License.
*#
package ${package};

import com.vaadin.ui.AbstractOrderedLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;

import ${viewPackage}.${bean.className}ChangeView;

import ${common.basePackage}.ui.view.ButtonFactory;
import ${common.basePackage}.ui.view.ExceptionMappingStrategy;

public class ${bean.className}ChangeViewImpl extends
#if( $bean.getDisplayProfile($profileName).getExStrings().contains("EDIT_VIEW_IMPL") ) 
    ${bean.className}EditViewImplEx<${bean.className}ChangeView.Observer> implements	${bean.className}ChangeView  {
#else
    ${bean.className}EditViewImpl<${bean.className}ChangeView.Observer> implements	${bean.className}ChangeView  {
#end

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	protected Button remove;
	protected Button cancel;
	protected Button save;
	
	public ${bean.className}ChangeViewImpl(ExceptionMappingStrategy exceptionMappingStrategy, ButtonFactory buttonFactory) {
		super(exceptionMappingStrategy, buttonFactory);
	}
	
	@Override
	public void initializeUi() {
		super.initializeUi();
		addStyleName("styleid-${bean.className}ChangeViewImpl");
	}

	@Override
	public void createButtons() {
		remove = buttonFactory.createRemoveButton();
		cancel = buttonFactory.createCancelButton();
		save = buttonFactory.createSaveButton();
	}
	
	@Override
	public void initButtons() {
		buttonFactory.initRemoveButton(remove, obtainBundle().getString("delete"),
				"styleid-${bean.className}AddViewImpl-remove", new Button.ClickListener() {
					private static final long serialVersionUID = 1L;

					@Override
					public void buttonClick(ClickEvent event) {
						${bean.className}ChangeViewImpl.this.getObserver().onRemove();
					}
				});
		buttonLayout.addComponent(remove);

		buttonFactory.initCancelButton(cancel, obtainBundle().getString("back"),
				"styleid-${bean.className}AddViewImpl-cancel", new Button.ClickListener() {
					private static final long serialVersionUID = 1L;

					@Override
					public void buttonClick(ClickEvent event) {
						${bean.className}ChangeViewImpl.this.getObserver().onCancel();
					}
				});
		buttonLayout.addComponent(cancel);
		
		buttonFactory.initSaveButton(save, obtainBundle().getString("save"),
				"styleid-${bean.className}AddViewImpl-save", new Button.ClickListener() {
					private static final long serialVersionUID = 1L;

					@Override
					public void buttonClick(ClickEvent event) {
						${bean.className}ChangeViewImpl.this.getObserver().onSave();
					}
				});
		buttonLayout.addComponent(save);
	}

}
