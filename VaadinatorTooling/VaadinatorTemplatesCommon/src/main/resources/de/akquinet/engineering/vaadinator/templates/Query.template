#*
Copyright 2014 akquinet engineering GmbH
 
Licensed under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations under
the License.
*#
package ${package};

import java.io.Serializable;

#foreach($import in $bean.imports)
${import}
#end

public class ${bean.className}Query implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public ${bean.className}Query() {
		super();
	}

	// filtering without default
#foreach($property in $bean.properties)
#if($property.propertyClassRange)
	private ${property.propertyClassNameBoxed} ${property.propertyName}From = null;
	private ${property.propertyClassNameBoxed} ${property.propertyName}To = null;
#else
	private ${property.propertyClassNameBoxed} ${property.propertyName} = null;
#end
#end

	// paging without default
	private int firstResult = 0;
	private int maxResults = 0;

	// ordering without default
	private ${bean.className}Properties orderBy = null;
	private boolean orderDescending = false;

#foreach($property in $bean.properties)
#if($property.propertyClassRange)
	public ${property.propertyClassNameBoxed} ${property.propertyGetterName}From() {
		return ${property.propertyName}From;
	}

	public void ${property.propertySetterName}From(${property.propertyClassNameBoxed} ${property.propertyName}From) {
		this.${property.propertyName}From = ${property.propertyName}From;
	}
	public ${property.propertyClassNameBoxed} ${property.propertyGetterName}To() {
		return ${property.propertyName}To;
	}

	public void ${property.propertySetterName}To(${property.propertyClassNameBoxed} ${property.propertyName}To) {
		this.${property.propertyName}To = ${property.propertyName}To;
	}
#else
	public ${property.propertyClassNameBoxed} ${property.propertyGetterName}() {
		return ${property.propertyName};
	}

	public void ${property.propertySetterName}(${property.propertyClassNameBoxed} ${property.propertyName}) {
		this.${property.propertyName} = ${property.propertyName};
	}
#end
#end

	public int getFirstResult() {
		return firstResult;
	}

	public void setFirstResult(int firstResult) {
		this.firstResult = firstResult;
	}

	public int getMaxResults() {
		return maxResults;
	}

	public void setMaxResults(int maxResults) {
		this.maxResults = maxResults;
	}

	public ${bean.className}Properties getOrderBy() {
		return orderBy;
	}

	public void setOrderBy(${bean.className}Properties orderBy) {
		this.orderBy = orderBy;
	}

	public boolean isOrderDescending() {
		return orderDescending;
	}

	public void setOrderDescending(boolean orderDescending) {
		this.orderDescending = orderDescending;
	}

	@Override
	public String toString() {
		return "${bean.className}Query ["
#set($first=true)
#foreach($property in $bean.properties)
#if($first==false)
	 + ", "
#end
#if($property.propertyClassRange)
		+ "${property.propertyName}From=" + ${property.propertyName}From + ", ${property.propertyName}To=" + ${property.propertyName}To
#else
		+ "${property.propertyName}=" + ${property.propertyName}
#end
#set($first=false)
#end 
		+ "firstResult=" + firstResult + ", maxResults=" + maxResults + ", orderBy=" + orderBy + ", orderDescending=" + orderDescending + "]";
	}

}
