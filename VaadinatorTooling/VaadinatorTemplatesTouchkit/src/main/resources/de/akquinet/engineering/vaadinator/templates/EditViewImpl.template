#*
Copyright 2014 akquinet engineering GmbH
 
Licensed under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations under
the License.
*#
package ${package};

#foreach($import in $bean.imports)
${import}
#end
import ${modelPackage}.*;

import ${common.basePackage}.ui.view.ExceptionMappingStrategy;
import ${common.basePackage}.ui.view.FieldInitializer;
import ${common.basePackage}.ui.view.VaadinView;

#parse("/de/akquinet/engineering/vaadinator/templates/bundle_includes.template")

import ${viewPackage}.${bean.className}EditView.Observer;

import java.util.List;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;

import com.vaadin.addon.touchkit.ui.DatePicker;
import com.vaadin.addon.touchkit.ui.NavigationView;
import com.vaadin.addon.touchkit.ui.VerticalComponentGroup;
import com.vaadin.data.Property;
import com.vaadin.data.Validator.InvalidValueException;
import com.vaadin.ui.AbstractOrderedLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CssLayout;
import com.vaadin.ui.Field;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.TextField;
#if($bean.beanValidation==true)
import com.vaadin.data.validator.BeanValidator;
#end

public abstract class ${bean.className}EditViewImpl<O extends ${bean.className}EditView.Observer>
    extends NavigationView implements ${bean.className}EditView<O>, VaadinView {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

#parse("/de/akquinet/engineering/vaadinator/templates/EditViewImpl_commonVar.template")
#parse("/de/akquinet/engineering/vaadinator/templates/bundle_obtain.template")

	protected CssLayout layout = new CssLayout();

#parse("/de/akquinet/engineering/vaadinator/templates/EditViewImpl_sectionvar.template")
#parse("/de/akquinet/engineering/vaadinator/templates/EditViewImpl_controlvar.template")

	public ${bean.className}EditViewImpl(ExceptionMappingStrategy exceptionMappingStrategy) {
    	super();
		this.exceptionMappingStrategy = exceptionMappingStrategy;
	}

	@Override
	public void initializeUi() {
#parse("/de/akquinet/engineering/vaadinator/templates/EditViewImpl_section.template")
#parse("/de/akquinet/engineering/vaadinator/templates/EditViewImpl_control.template")
		setContent(layout);
		initButtons();
		addStyleName("styleid-${bean.className}EditViewImpl");
	}    

    @Override
	public void beforeValidation() {
	}

	@Override
	public void beforeFieldValidation(Field<?> field) {
		field.removeStyleName("validation-red");
	}

	@Override
	public void onFieldValidationError(Field<?> field, InvalidValueException excpetion) {
		field.addStyleName("validation-red");
	}

	@Override
	public void onValidationError(Map<Field<?>, InvalidValueException> validationErrors) {
	}

#parse("/de/akquinet/engineering/vaadinator/templates/EditViewImpl_validation.template")

#parse("/de/akquinet/engineering/vaadinator/templates/EditViewImpl_commonMethods.template")
		
#parse("/de/akquinet/engineering/vaadinator/templates/EditViewImpl_propertyMethods.template")
}
