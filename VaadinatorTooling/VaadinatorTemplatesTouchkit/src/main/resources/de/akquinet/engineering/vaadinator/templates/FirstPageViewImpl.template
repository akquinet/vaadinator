#*
Copyright 2014 akquinet engineering GmbH
 
Licensed under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations under
the License.
*#
package ${package};

#parse("/de/akquinet/engineering/vaadinator/templates/bundle_includes.template")

import ${common.basePackage}.ui.view.View;
import ${common.basePackage}.ui.view.ExceptionMappingStrategy;

import com.vaadin.addon.touchkit.ui.NavigationButton;
import com.vaadin.addon.touchkit.ui.NavigationButton.NavigationButtonClickEvent;
import com.vaadin.addon.touchkit.ui.NavigationButton.NavigationButtonClickListener;
import com.vaadin.addon.touchkit.ui.NavigationView;
import com.vaadin.ui.Notification;
import com.vaadin.addon.touchkit.ui.VerticalComponentGroup;

import com.vaadin.ui.Component;
import com.vaadin.ui.CssLayout;

public class FirstPageViewImpl extends NavigationView implements FirstPageView {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	protected CssLayout firstPageLayout = new CssLayout();
#foreach($bean in $common.beans)
#if($bean.displayed)
#if($bean.getDisplayProfile($profileName).showOnFirstPage)
	protected NavigationButton list${bean.className}Button = new NavigationButton();
	protected NavigationButton new${bean.className}Button = new NavigationButton();
#end
#end
#end

	private FirstPageView.Observer observer;

	protected ExceptionMappingStrategy exceptionMappingStrategy = null;

	public FirstPageViewImpl(ExceptionMappingStrategy exceptionMappingStrategy) {
 		super();
		this.exceptionMappingStrategy = exceptionMappingStrategy;
 	}

#parse("/de/akquinet/engineering/vaadinator/templates/bundle_obtain.template")

	@Override
	public void initializeUi() {
		setCaption(obtainBundle().getString("entry"));
		VerticalComponentGroup firstPageButtons = new VerticalComponentGroup();
		firstPageButtons.setCaption(obtainBundle().getString("entry.welcome"));
#foreach($bean in $common.beans)
#if($bean.displayed)
#if($bean.getDisplayProfile($profileName).showOnFirstPage)
		list${bean.className}Button.setCaption(obtainBundle().getString("entity.${bean.className}.list"));		
		list${bean.className}Button.addClickListener(new NavigationButtonClickListener() {
		
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void buttonClick(NavigationButtonClickEvent event) {
				observer.onList${bean.className}();
			}
			
		});
		list${bean.className}Button.addStyleName("styleid-FirstPageViewImpl-list${bean.className}Button");
		firstPageButtons.addComponent(list${bean.className}Button);
		new${bean.className}Button.setCaption(obtainBundle().getString("entity.${bean.className}.new"));
		new${bean.className}Button.addClickListener(new NavigationButtonClickListener() {

			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void buttonClick(NavigationButtonClickEvent event) {
				observer.onAdd${bean.className}();
			}
			
		});
		new${bean.className}Button.addStyleName("styleid-FirstPageViewImpl-new${bean.className}Button");
		firstPageButtons.addComponent(new${bean.className}Button);
#end
#end
#end
		firstPageLayout.addComponent(firstPageButtons);
		addStyleName("styleid-FirstPageViewImpl");
		setContent(firstPageLayout);
	}

	@Override
	public void openSubView(View view) {
		getNavigationManager().navigateTo((Component) view.getComponent());
	}

	@Override
	public void closeSubView() {
		getNavigationManager().navigateTo(this);
	}

	@Override
	public void setObserver(FirstPageView.Observer observer) {
		this.observer = observer;
	}

	@Override
	public Object getComponent() {
		return this;
	}

	@Override
	public void showErrorMessage(String message) {
		Notification.show(message, Notification.Type.ERROR_MESSAGE);
	}
	
	@Override
	public void showErrorMessage(Exception exception) {
		Notification.show(exceptionMappingStrategy.getCaption(exception),
				exceptionMappingStrategy.getMessage(exception), exceptionMappingStrategy.getType(exception));

	}

}
